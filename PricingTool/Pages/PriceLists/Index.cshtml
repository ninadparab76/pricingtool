@page
@model PricingTool.Pages.PriceLists.IndexModel

@{
    ViewData["Title"] = "Price Lists";
}

<h1>Price Lists</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>

<div class="row mb-3">
    <div class="col-md-12">
        <form method="get" class="row g-3">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search price lists..." name="searchString"
                        value="@Model.SearchString">
                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                    <a asp-page="./Index" class="btn btn-outline-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                        asp-route-searchString="@Model.SearchString">
                        Name
                        @if (Model.CurrentSort == "name_asc")
                        {
                            <i class="bi bi-arrow-up"></i>
                        }
                        else if (Model.CurrentSort == "name_desc")
                        {
                            <i class="bi bi-arrow-down"></i>
                        }
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                        asp-route-searchString="@Model.SearchString">
                        Date Created
                        @if (Model.CurrentSort == "date_asc")
                        {
                            <i class="bi bi-arrow-up"></i>
                        }
                        else if (Model.CurrentSort == "date_desc")
                        {
                            <i class="bi bi-arrow-down"></i>
                        }
                    </a>
                </th>
                <th>Entries Count</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var priceList in Model.PriceLists)
            {
                <tr>
                    <td>@priceList.Name</td>
                    <td>@priceList.DateCreated.ToShortDateString()</td>
                    <td>@Model.PriceListEntryCounts.GetValueOrDefault(priceList.Id, 0)</td>
                    <td>
                        <div class="btn-group">
                            <a asp-page="./Edit" asp-route-id="@priceList.Id" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a asp-page="./Details" asp-route-id="@priceList.Id" class="btn btn-sm btn-outline-info">
                                <i class="bi bi-info-circle"></i> Details
                            </a>
                            <a asp-page="./Delete" asp-route-id="@priceList.Id" class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.PriceLists.Count == 0)
{
    <div class="alert alert-info">
        No price lists found. <a asp-page="Create">Create a new price list</a> to get started.
    </div>
}

<div class="d-flex justify-content-between my-3">
    <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-searchString="@Model.SearchString"
        class="btn btn-outline-primary @(Model.HasPreviousPage ? "" : "disabled")">
        <i class="bi bi-arrow-left"></i> Previous
    </a>

    <span class="align-self-center">
        Page @Model.PageIndex of @Model.TotalPages
    </span>

    <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.PageIndex + 1)"
        asp-route-searchString="@Model.SearchString"
        class="btn btn-outline-primary @(Model.HasNextPage ? "" : "disabled")">
        Next <i class="bi bi-arrow-right"></i>
    </a>
</div>
