@page
@model PricingTool.Pages.ClientProductDiscounts.DetailsModel

@{
    ViewData["Title"] = "Discount Details";
}

<h1>Discount Details</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">Client Information</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-4">Client Name</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Client.Title)</dd>
                    
                    @if (!string.IsNullOrEmpty(Model.ClientProductDiscount.Client.ReferenceNumber))
                    {
                        <dt class="col-sm-4">Reference Number</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Client.ReferenceNumber)</dd>
                    }
                    
                    @if (Model.ClientProductDiscount.Client.PriceList != null)
                    {
                        <dt class="col-sm-4">Price List</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Client.PriceList.Name)</dd>
                    }
                </dl>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Product Information</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-4">Product Name</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Product.ProductName)</dd>
                    
                    <dt class="col-sm-4">Category</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Product.Category)</dd>
                    
                    <dt class="col-sm-4">TLD</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Product.Tld)</dd>
                    
                    @if (Model.ClientProductDiscount.Product.Period.HasValue)
                    {
                        <dt class="col-sm-4">Period</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Product.Period) months</dd>
                    }
                      <dt class="col-sm-4">Product Base Price</dt>
                    <dd class="col-sm-8">
                        @(Model.ClientProductDiscount.Product.BasePrice.ToString("N2")) €
                        @if (!Model.PriceListPrice.HasValue)
                        {
                            <span class="badge bg-info" data-bs-toggle="tooltip" title="This price is used for discount calculations">Used for calculations</span>
                        }
                    </dd>
                    
                    @if (Model.PriceListPrice.HasValue)
                    {
                        <dt class="col-sm-4">Price List Price</dt>
                        <dd class="col-sm-8">
                            @Model.PriceListPrice.Value.ToString("N2") € 
                            <span class="badge bg-info" data-bs-toggle="tooltip" title="This price from the client's price list is used for discount calculations">Used for calculations</span>
                        </dd>
                    }
                </dl>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="card-title mb-0">Discount Details</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">                    @if (Model.ClientProductDiscount.FixedPrice.HasValue)
                    {
                        <dt class="col-sm-4">Fixed Price</dt>
                        <dd class="col-sm-8">@Model.ClientProductDiscount.FixedPrice.Value.ToString("N2") €</dd>
                    }
                    
                    @if (Model.ClientProductDiscount.Discount.HasValue)
                    {
                        <dt class="col-sm-4">Discount</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.Discount)%</dd>
                    }
                      <dt class="col-sm-4">Final Price</dt>
                    <dd class="col-sm-8">@Model.FinalPrice.ToString("N2") €</dd>
                    
                    <dt class="col-sm-4">Savings</dt>
                    <dd class="col-sm-8">@Model.Savings.ToString("N2") € (@Model.SavingsPercentage.ToString("F2")%)</dd>
                    
                    <dt class="col-sm-4">Created</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.DateCreated)</dd>
                    
                    <dt class="col-sm-4">Last Modified</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ClientProductDiscount.DateModified)</dd>
                </dl>
            </div>
        </div>
        
        <div class="card bg-light">
            <div class="card-body">
                <h5 class="card-title">Price Breakdown</h5>
                <div class="alert alert-info mb-3">
                    <i class="fas fa-info-circle"></i> 
                    @if (Model.PriceListPrice.HasValue)
                    {
                        <span>Calculations are based on the <strong>price list price</strong> assigned to this client.</span>
                    }
                    else
                    {
                        <span>Calculations are based on the <strong>product base price</strong> as no price list price is available.</span>
                    }
                </div>
                <div class="progress mb-3" style="height: 25px;">
                    <div class="progress-bar bg-success" role="progressbar" style="width: @(Model.SavingsPercentage)%;" 
                         aria-valuenow="@Model.SavingsPercentage" aria-valuemin="0" aria-valuemax="100">
                        @Model.SavingsPercentage.ToString("F1")% Discount
                    </div>
                </div>
                <div class="row">                    <div class="col-6">
                        <div class="alert alert-secondary">
                            <strong>Base Price:</strong><br />
                            @Model.BasePrice.ToString("N2") €
                            @if (Model.PriceListPrice.HasValue)
                            {
                                <small class="d-block text-muted">From client's price list</small>
                            }
                            else
                            {
                                <small class="d-block text-muted">From product base price</small>
                            }
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="alert alert-success">
                            <strong>Final Price:</strong><br />
                            @Model.FinalPrice.ToString("N2") €
                            <small class="d-block text-muted">
                                @if (Model.ClientProductDiscount.FixedPrice.HasValue)
                                {
                                    <span>Fixed price override</span>
                                }
                                else if (Model.ClientProductDiscount.Discount.HasValue)
                                {
                                    <span>@Model.ClientProductDiscount.Discount.Value.ToString("F2")% discount applied</span>
                                }
                                else
                                {
                                    <span>No discount applied</span>
                                }
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-page="./Edit" asp-route-id="@Model.ClientProductDiscount.Id" class="btn btn-primary">Edit</a>
    <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
