@page
@model PricingTool.Pages.Domains.IndexModel

@{
    ViewData["Title"] = "Domains";
}

<h1>Domains</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>

<div class="row mb-3">
    <div class="col-md-12">
        <form method="get" class="row g-3">
            <div class="col-md-5">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search domains..." name="searchString"
                        value="@Model.SearchString">
                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                </div>
            </div>
            <div class="col-md-3">
                <select name="clientFilter" class="form-select" asp-items="Model.ClientSelectList">
                    <option value="">-- All Clients --</option>
                </select>
            </div>
            <div class="col-md-4">
                <div class="btn-group w-100">
                    <input type="hidden" name="groupByClient" value="@Model.GroupByClient.ToString().ToLower()">
                    <button type="submit" class="btn btn-outline-primary">Apply Filters</button>
                    <a asp-page="./Index" asp-route-groupByClient="@Model.GroupByClient" class="btn btn-outline-secondary">Clear Filters</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="btn-group">
        <a asp-page="./Index" asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter" 
           asp-route-sortOrder="@Model.CurrentSort" asp-route-groupByClient="false"
           class="btn view-toggle-btn @(!Model.GroupByClient ? "btn-primary" : "btn-outline-primary")">
            <i class="bi bi-list"></i> List View
        </a>
        <a asp-page="./Index" asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter" 
           asp-route-sortOrder="@Model.CurrentSort" asp-route-groupByClient="true"
           class="btn view-toggle-btn @(Model.GroupByClient ? "btn-primary" : "btn-outline-primary")">
            <i class="bi bi-grid-3x3-gap"></i> Grouped View
        </a>
    </div>
    <div>
        <span class="text-muted">
            @if (Model.GroupByClient)
            {
                <i class="bi bi-info-circle"></i> Showing domains grouped by client with total renewal costs
            }
            else
            {
                <i class="bi bi-info-circle"></i> Showing domains in list view
            }
        </span>
    </div>
</div>

@if (Model.GroupByClient)
{
    <div class="accordion" id="clientsAccordion">
        @foreach (var clientGroup in Model.GroupedDomains.OrderBy(g => Model.ClientNames.GetValueOrDefault(g.Key,
            "Unknown")))
        {
            var clientId = clientGroup.Key;
            var domains = clientGroup.Value;
            var clientName = Model.ClientNames.GetValueOrDefault(clientId, "Unknown Client");
            var totalRenewalCost = Model.ClientTotalRenewalCosts.GetValueOrDefault(clientId, 0m);
            var accordionId = $"client-{clientId}";

            <div class="accordion-item mb-2">
                <h2 class="accordion-header" id="heading-@accordionId">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapse-@accordionId" aria-expanded="true" aria-controls="collapse-@accordionId">                        <div class="d-flex justify-content-between w-100">
                            <span><strong>@clientName</strong> (@domains.Count domains)</span>
                            <span class="badge bg-primary rounded-pill ms-2 total-renewal-badge">
                                Total Renewal: @totalRenewalCost.ToString("C")
                            </span>
                        </div>
                    </button>
                </h2>
                <div id="collapse-@accordionId" class="accordion-collapse collapse show" aria-labelledby="heading-@accordionId"
                    data-bs-parent="#clientsAccordion">
                    <div class="accordion-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>Domain Name</th>
                                        <th>TLD</th>
                                        <th>Expiration Date</th>
                                        <th>Renewal Cost</th>
                                        <th>Registry Lock</th>
                                        <th>Privacy</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>                                    @foreach (var domain in domains.OrderBy(d => d.DomainName))
                                    {
                                        var renewalCost = Model.DomainRenewalCosts.GetValueOrDefault(domain.Id, 0m);
                                        var daysToExpiration = domain.ExpirationDate.HasValue ? (domain.ExpirationDate.Value - DateTime.Now).Days : -1;
                                        var rowClass = "";
                                        
                                        if (daysToExpiration >= 0 && daysToExpiration < 30)
                                        {
                                            rowClass = "expiring-soon";
                                        }
                                        else if (daysToExpiration >= 30 && daysToExpiration < 60)
                                        {
                                            rowClass = "expiring-warning";
                                        }
                                        
                                        <tr class="@rowClass">
                                            <td>@domain.DomainName</td>
                                            <td>@domain.Tld</td>
                                            <td>
                                                @if (domain.ExpirationDate.HasValue)
                                                {
                                                    @domain.ExpirationDate.Value.ToShortDateString()

                                                    @if (daysToExpiration < 30)
                                                    {
                                                        <span class="badge bg-danger ms-2">Expires Soon</span>
                                                    }
                                                    else if (daysToExpiration < 60)
                                                    {
                                                        <span class="badge bg-warning ms-2">Expiring</span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span>N/A</span>
                                                }
                                            </td>                                            <td>
                                                <span class="renewal-cost" data-bs-toggle="tooltip" 
                                                     data-bs-html="true"
                                                     title="<strong>Renewal Cost Breakdown</strong><br>
                                                     Base Domain: @domain.Tld<br>
                                                     @(domain.HasRegistryLock ? "<span class='text-success'>✓ Registry Lock</span><br>" : "")
                                                     @(domain.HasPrivacy ? "<span class='text-success'>✓ Privacy</span><br>" : "")
                                                     @(domain.HasLocalPresence ? "<span class='text-success'>✓ Local Presence</span><br>" : "")
                                                     @(domain.HasProxy ? "<span class='text-success'>✓ Proxy</span><br>" : "")
                                                     <strong>Period:</strong> @(domain.RenewPeriod ?? 1) year(s)">
                                                    @renewalCost.ToString("C")
                                                    @if (domain.HasRegistryLock || domain.HasPrivacy || domain.HasLocalPresence || domain.HasProxy)
                                                    {
                                                        <i class="bi bi-info-circle-fill text-muted ms-1 small"></i>
                                                    }
                                                </span>
                                            </td>
                                            <td>
                                                @if (domain.HasRegistryLock)
                                                {
                                                    <i class="bi bi-lock-fill text-success" title="Registry Lock Enabled"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-unlock text-secondary" title="Registry Lock Disabled"></i>
                                                }
                                            </td>
                                                @if (domain.HasPrivacy)
                                                {/span>
                                                    <i class="bi bi-shield-check text-success" title="Privacy Enabled"></i>
                                                }
                                                else(domain.HasRegistryLock)
                                                {
                                                    <i class="bi bi-shield-x text-secondary" title="Privacy Disabled"></i></i>
                                                }
                                            </td>lse
                                            <td>{
                                                <div class="btn-group">ock text-secondary" title="Registry Lock Disabled"></i>
                                                    <a asp-page="./Edit" asp-route-id="@domain.Id"
                                                        class="btn btn-sm btn-outline-primary">
                                                        <i class="bi bi-pencil"></i> Edit
                                                    </a>ain.HasPrivacy)
                                                    <a asp-page="./Details" asp-route-id="@domain.Id"
                                                        class="btn btn-sm btn-outline-info">s" title="Privacy Enabled"></i>
                                                        <i class="bi bi-info-circle"></i> Details
                                                    </a>
                                                    <a asp-page="./Delete" asp-route-id="@domain.Id"
                                                        class="btn btn-sm btn-outline-danger">itle="Privacy Disabled"></i>
                                                        <i class="bi bi-trash"></i> Delete
                                                    </a>
                                                </div>
                                            </td>div class="btn-group">
                                        </tr>       <a asp-page="./Edit" asp-route-id="@domain.Id"
                                    }                   class="btn btn-sm btn-outline-primary">
                                </tbody>                <i class="bi bi-pencil"></i> Edit
                            </table>                </a>
                        </div>                      <a asp-page="./Details" asp-route-id="@domain.Id"
                    </div>                              class="btn btn-sm btn-outline-info">
                </div>                                  <i class="bi bi-info-circle"></i> Details
            </div>                                  </a>
        }                                           <a asp-page="./Delete" asp-route-id="@domain.Id"
    </div>                                              class="btn btn-sm btn-outline-danger">
}                                                       <i class="bi bi-trash"></i> Delete
else                                                </a>
{                                               </div>
    <div class="table-responsive">          </td>
        <table class="table table-striped table-hover">
            <thead>                 }
                <tr>            </tbody>
                    <th> <a asp-page="./Index" asp-route-sortOrder="@Model.DomainNameSort"
                            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
                            asp-route-groupByClient="@Model.GroupByClient">
                            Domain Name
                            @if (Model.CurrentSort == "domain_asc")
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                            else if (Model.CurrentSort == "domain_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }able-striped table-hover">
                        </a>
                    </th>
                    <th> <a asp-page="./Index" asp-route-sortOrder="@Model.TldSort"meSort"
                            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
                            asp-route-groupByClient="@Model.GroupByClient">
                            TLDain Name
                            @if (Model.CurrentSort == "tld_asc")c")
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                            else if (Model.CurrentSort == "tld_desc")c")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                        </a>
                    </th>
                    <th> <a asp-page="./Index" asp-route-sortOrder="@Model.ClientSort"
                            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
                            asp-route-groupByClient="@Model.GroupByClient">
                            Client
                            @if (Model.CurrentSort == "client_asc")
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                            else if (Model.CurrentSort == "client_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                        </a>
                    </th>
                    <th> <a asp-page="./Index" asp-route-sortOrder="@Model.ExpirationDateSort"
                            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
                            asp-route-groupByClient="@Model.GroupByClient">
                            Expiration Date
                            @if (Model.CurrentSort == "expiration_asc")
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                            else if (Model.CurrentSort == "expiration_desc")
                            {
                                <i class="bi bi-arrow-down"></i>                            }
                        </a>}
                    </th>/a>
                    <th>Renewal Cost</th>
                    <th>Registry Lock</th>dex" asp-route-sortOrder="@Model.ExpirationDateSort"
                    <th>Privacy</th>e-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
                    <th>Actions</th>e-groupByClient="@Model.GroupByClient">
                </tr>       Expiration Date
            </thead>        @if (Model.CurrentSort == "expiration_asc")
            <tbody>                @foreach (var domain in Model.Domains)
                {               <i class="bi bi-arrow-up"></i>
                    var renewalCost = Model.DomainRenewalCosts.GetValueOrDefault(domain.Id, 0m);
                    var daysToExpiration = domain.ExpirationDate.HasValue ? (domain.ExpirationDate.Value - DateTime.Now).Days : -1;
                    var rowClass = "";
                                <i class="bi bi-arrow-down"></i>                            }
                    if (daysToExpiration >= 0 && daysToExpiration < 30)
                    {/th>
                        rowClass = "expiring-soon";
                    }th>Registry Lock</th>
                    else if (daysToExpiration >= 30 && daysToExpiration < 60)
                    {th>Actions</th>
                        rowClass = "expiring-warning";
                    }
                                   @foreach (var domain in Model.Domains)
                    <tr class="@rowClass">
                        <td>@domain.DomainName</td>enewalCosts.GetValueOrDefault(domain.Id, 0m);
                        <td>@domain.Tld</td>omain.ExpirationDate.HasValue ? (domain.ExpirationDate.Value - DateTime.Now).Days : -1;
                        <td>@(domain.Client?.Title ?? "N/A")</td>
                        <td>
                            @if (domain.ExpirationDate.HasValue)n < 30)
                            {
                                @domain.ExpirationDate.Value.ToShortDateString()
                    }
                                @if (daysToExpiration < 30)ToExpiration < 60)
                                {
                                    <span class="badge bg-danger ms-2">Expires Soon</span>
                                }
                                else if (daysToExpiration < 60)
                                {owClass">
                                    <span class="badge bg-warning ms-2">Expiring</span>
                                }                            }
                            }lse
                            elsean>N/A</span>
                            {<span>N/A</span>
                            }
                        </td>
                        <td>@renewalCost.ToString("C")</td>-bs-toggle="tooltip" 
                        <td>     title="Base Domain: @domain.Tld
                            @if (domain.HasRegistryLock)k ? "✓ Registry Lock" : "")
                            {    @(domain.HasPrivacy ? "✓ Privacy" : "")
                                <i class="bi bi-lock-fill text-success" title="Registry Lock Enabled"></i>
                            }    @(domain.HasProxy ? "✓ Proxy" : "")
                            else Period: @(domain.RenewPeriod ?? 1) year(s)">
                            {   @renewalCost.ToString("C")
                                <i class="bi bi-unlock text-secondary" title="Registry Lock Disabled"></i>e || domain.HasProxy)
                            }   {
                        </td>       <i class="bi bi-info-circle-fill text-muted ms-1 small"></i>
                        <td>    }
                            @if (domain.HasPrivacy)
                            {
                                <i class="bi bi-shield-check text-success" title="Privacy Enabled"></i>
                            }   {
                            else    <span class="badge bg-danger ms-2">Expires Soon</span>
                            {   }
                                <i class="bi bi-shield-x text-secondary" title="Privacy Disabled"></i>
                            }   {
                        </td>       <span class="badge bg-warning ms-2">Expiring</span>
                        <td>    }
                            <div class="btn-group">
                                <a asp-page="./Edit" asp-route-id="@domain.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <a asp-page="./Details" asp-route-id="@domain.Id" class="btn btn-sm btn-outline-info">
                                    <i class="bi bi-info-circle"></i> Details
                                </a>
                                <a asp-page="./Delete" asp-route-id="@domain.Id" class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-trash"></i> Delete
                                </a>lass="bi bi-lock-fill text-success" title="Registry Lock Enabled"></i>
                            </div>
                        </td>lse
                    </tr>   {
                }               <i class="bi bi-unlock text-secondary" title="Registry Lock Disabled"></i>
            </tbody>        }
        </table>        </td>
    </div>              <td>
                            @if (domain.HasPrivacy)
                            {
    var prevDisabled = !Model.Domains.HasPreviousPage ? "disabled" : "";s" title="Privacy Enabled"></i>
    var nextDisabled = !Model.Domains.HasNextPage ? "disabled" : "";
                            else
                            {
    <div class="d-flex justify-content-between my-3"> <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.Domains.PageIndex - 1)" asp-route-searchString="@Model.SearchString"
            asp-route-clientFilter="@Model.CurrentClientFilter" asp-route-groupByClient="@Model.GroupByClient"
            class="btn btn-outline-primary @prevDisabled">
            <i class="bi bi-arrow-left"></i> Previous
        </a>                    <a asp-page="./Edit" asp-route-id="@domain.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i> Edit
        <span class="align-self-center">
            Page @Model.Domains.PageIndex of @Model.Domains.TotalPages@domain.Id" class="btn btn-sm btn-outline-info">
        </span>                     <i class="bi bi-info-circle"></i> Details
                                </a>
        <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.Domains.PageIndex + 1)"
            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
            asp-route-groupByClient="@Model.GroupByClient" class="btn btn-outline-primary @nextDisabled">
            Next <i class="bi bi-arrow-right"></i>
        </a>            </td>
    </div>          </tr>
}               }
            </tbody>















}    </script>        });            })                })                    placement: 'top'                    html: true,                return new bootstrap.Tooltip(tooltipTriggerEl, {            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))        document.addEventListener('DOMContentLoaded', function() {        // Initialize tooltips    <script>@section Scripts {        </table>
    </div>


    var prevDisabled = !Model.Domains.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Domains.HasNextPage ? "disabled" : "";


    <div class="d-flex justify-content-between my-3"> <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.Domains.PageIndex - 1)" asp-route-searchString="@Model.SearchString"
            asp-route-clientFilter="@Model.CurrentClientFilter" asp-route-groupByClient="@Model.GroupByClient"
            class="btn btn-outline-primary @prevDisabled">
            <i class="bi bi-arrow-left"></i> Previous
        </a>

        <span class="align-self-center">
            Page @Model.Domains.PageIndex of @Model.Domains.TotalPages
        </span>

        <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.Domains.PageIndex + 1)"
            asp-route-searchString="@Model.SearchString" asp-route-clientFilter="@Model.CurrentClientFilter"
            asp-route-groupByClient="@Model.GroupByClient" class="btn btn-outline-primary @nextDisabled">
            Next <i class="bi bi-arrow-right"></i>
        </a>
    </div>
}
